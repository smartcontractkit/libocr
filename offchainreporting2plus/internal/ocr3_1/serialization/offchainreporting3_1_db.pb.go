// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.25.1
// source: offchainreporting3_1_db.proto

package serialization

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TreeSyncPhase int32

const (
	TreeSyncPhase_TREE_SYNC_PHASE_INACTIVE TreeSyncPhase = 0
	TreeSyncPhase_TREE_SYNC_PHASE_WAITING  TreeSyncPhase = 1
	TreeSyncPhase_TREE_SYNC_PHASE_ACTIVE   TreeSyncPhase = 2
)

// Enum value maps for TreeSyncPhase.
var (
	TreeSyncPhase_name = map[int32]string{
		0: "TREE_SYNC_PHASE_INACTIVE",
		1: "TREE_SYNC_PHASE_WAITING",
		2: "TREE_SYNC_PHASE_ACTIVE",
	}
	TreeSyncPhase_value = map[string]int32{
		"TREE_SYNC_PHASE_INACTIVE": 0,
		"TREE_SYNC_PHASE_WAITING":  1,
		"TREE_SYNC_PHASE_ACTIVE":   2,
	}
)

func (x TreeSyncPhase) Enum() *TreeSyncPhase {
	p := new(TreeSyncPhase)
	*p = x
	return p
}

func (x TreeSyncPhase) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TreeSyncPhase) Descriptor() protoreflect.EnumDescriptor {
	return file_offchainreporting3_1_db_proto_enumTypes[0].Descriptor()
}

func (TreeSyncPhase) Type() protoreflect.EnumType {
	return &file_offchainreporting3_1_db_proto_enumTypes[0]
}

func (x TreeSyncPhase) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TreeSyncPhase.Descriptor instead.
func (TreeSyncPhase) EnumDescriptor() ([]byte, []int) {
	return file_offchainreporting3_1_db_proto_rawDescGZIP(), []int{0}
}

// KeyDigestRange represents a contiguous range [start_index, end_incl_index]
// in the key digest space.
type KeyDigestRange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartIndex   []byte `protobuf:"bytes,1,opt,name=start_index,json=startIndex,proto3" json:"start_index,omitempty"`
	EndInclIndex []byte `protobuf:"bytes,2,opt,name=end_incl_index,json=endInclIndex,proto3" json:"end_incl_index,omitempty"`
}

func (x *KeyDigestRange) Reset() {
	*x = KeyDigestRange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_offchainreporting3_1_db_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyDigestRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyDigestRange) ProtoMessage() {}

func (x *KeyDigestRange) ProtoReflect() protoreflect.Message {
	mi := &file_offchainreporting3_1_db_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyDigestRange.ProtoReflect.Descriptor instead.
func (*KeyDigestRange) Descriptor() ([]byte, []int) {
	return file_offchainreporting3_1_db_proto_rawDescGZIP(), []int{0}
}

func (x *KeyDigestRange) GetStartIndex() []byte {
	if x != nil {
		return x.StartIndex
	}
	return nil
}

func (x *KeyDigestRange) GetEndInclIndex() []byte {
	if x != nil {
		return x.EndInclIndex
	}
	return nil
}

type TreeSyncStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Phase                  TreeSyncPhase     `protobuf:"varint,1,opt,name=phase,proto3,enum=offchainreporting3_1.TreeSyncPhase" json:"phase,omitempty"`
	TargetSeqNr            uint64            `protobuf:"varint,2,opt,name=target_seq_nr,json=targetSeqNr,proto3" json:"target_seq_nr,omitempty"`
	TargetStateRootDigest  []byte            `protobuf:"bytes,3,opt,name=target_state_root_digest,json=targetStateRootDigest,proto3" json:"target_state_root_digest,omitempty"`
	PendingKeyDigestRanges []*KeyDigestRange `protobuf:"bytes,4,rep,name=pending_key_digest_ranges,json=pendingKeyDigestRanges,proto3" json:"pending_key_digest_ranges,omitempty"`
}

func (x *TreeSyncStatus) Reset() {
	*x = TreeSyncStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_offchainreporting3_1_db_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TreeSyncStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TreeSyncStatus) ProtoMessage() {}

func (x *TreeSyncStatus) ProtoReflect() protoreflect.Message {
	mi := &file_offchainreporting3_1_db_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TreeSyncStatus.ProtoReflect.Descriptor instead.
func (*TreeSyncStatus) Descriptor() ([]byte, []int) {
	return file_offchainreporting3_1_db_proto_rawDescGZIP(), []int{1}
}

func (x *TreeSyncStatus) GetPhase() TreeSyncPhase {
	if x != nil {
		return x.Phase
	}
	return TreeSyncPhase_TREE_SYNC_PHASE_INACTIVE
}

func (x *TreeSyncStatus) GetTargetSeqNr() uint64 {
	if x != nil {
		return x.TargetSeqNr
	}
	return 0
}

func (x *TreeSyncStatus) GetTargetStateRootDigest() []byte {
	if x != nil {
		return x.TargetStateRootDigest
	}
	return nil
}

func (x *TreeSyncStatus) GetPendingKeyDigestRanges() []*KeyDigestRange {
	if x != nil {
		return x.PendingKeyDigestRanges
	}
	return nil
}

type PacemakerState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Epoch                   uint64 `protobuf:"varint,1,opt,name=epoch,proto3" json:"epoch,omitempty"`
	HighestSentNewEpochWish uint64 `protobuf:"varint,2,opt,name=highest_sent_new_epoch_wish,json=highestSentNewEpochWish,proto3" json:"highest_sent_new_epoch_wish,omitempty"`
}

func (x *PacemakerState) Reset() {
	*x = PacemakerState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_offchainreporting3_1_db_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PacemakerState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PacemakerState) ProtoMessage() {}

func (x *PacemakerState) ProtoReflect() protoreflect.Message {
	mi := &file_offchainreporting3_1_db_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PacemakerState.ProtoReflect.Descriptor instead.
func (*PacemakerState) Descriptor() ([]byte, []int) {
	return file_offchainreporting3_1_db_proto_rawDescGZIP(), []int{2}
}

func (x *PacemakerState) GetEpoch() uint64 {
	if x != nil {
		return x.Epoch
	}
	return 0
}

func (x *PacemakerState) GetHighestSentNewEpochWish() uint64 {
	if x != nil {
		return x.HighestSentNewEpochWish
	}
	return 0
}

type BlobMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PayloadLength uint64   `protobuf:"varint,1,opt,name=payload_length,json=payloadLength,proto3" json:"payload_length,omitempty"`
	ChunkHaves    []bool   `protobuf:"varint,2,rep,packed,name=chunk_haves,json=chunkHaves,proto3" json:"chunk_haves,omitempty"`
	ChunkDigests  [][]byte `protobuf:"bytes,3,rep,name=chunk_digests,json=chunkDigests,proto3" json:"chunk_digests,omitempty"`
	ExpirySeqNr   uint64   `protobuf:"varint,4,opt,name=expiry_seq_nr,json=expirySeqNr,proto3" json:"expiry_seq_nr,omitempty"`
	Submitter     uint32   `protobuf:"varint,5,opt,name=submitter,proto3" json:"submitter,omitempty"`
}

func (x *BlobMeta) Reset() {
	*x = BlobMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_offchainreporting3_1_db_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlobMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlobMeta) ProtoMessage() {}

func (x *BlobMeta) ProtoReflect() protoreflect.Message {
	mi := &file_offchainreporting3_1_db_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlobMeta.ProtoReflect.Descriptor instead.
func (*BlobMeta) Descriptor() ([]byte, []int) {
	return file_offchainreporting3_1_db_proto_rawDescGZIP(), []int{3}
}

func (x *BlobMeta) GetPayloadLength() uint64 {
	if x != nil {
		return x.PayloadLength
	}
	return 0
}

func (x *BlobMeta) GetChunkHaves() []bool {
	if x != nil {
		return x.ChunkHaves
	}
	return nil
}

func (x *BlobMeta) GetChunkDigests() [][]byte {
	if x != nil {
		return x.ChunkDigests
	}
	return nil
}

func (x *BlobMeta) GetExpirySeqNr() uint64 {
	if x != nil {
		return x.ExpirySeqNr
	}
	return 0
}

func (x *BlobMeta) GetSubmitter() uint32 {
	if x != nil {
		return x.Submitter
	}
	return 0
}

type BlobQuotaStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count                   uint64 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	CumulativePayloadLength uint64 `protobuf:"varint,2,opt,name=cumulative_payload_length,json=cumulativePayloadLength,proto3" json:"cumulative_payload_length,omitempty"`
}

func (x *BlobQuotaStats) Reset() {
	*x = BlobQuotaStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_offchainreporting3_1_db_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlobQuotaStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlobQuotaStats) ProtoMessage() {}

func (x *BlobQuotaStats) ProtoReflect() protoreflect.Message {
	mi := &file_offchainreporting3_1_db_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlobQuotaStats.ProtoReflect.Descriptor instead.
func (*BlobQuotaStats) Descriptor() ([]byte, []int) {
	return file_offchainreporting3_1_db_proto_rawDescGZIP(), []int{4}
}

func (x *BlobQuotaStats) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *BlobQuotaStats) GetCumulativePayloadLength() uint64 {
	if x != nil {
		return x.CumulativePayloadLength
	}
	return 0
}

var File_offchainreporting3_1_db_proto protoreflect.FileDescriptor

var file_offchainreporting3_1_db_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x6f, 0x66, 0x66, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x69, 0x6e, 0x67, 0x33, 0x5f, 0x31, 0x5f, 0x64, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x14, 0x6f, 0x66, 0x66, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x69,
	0x6e, 0x67, 0x33, 0x5f, 0x31, 0x22, 0x57, 0x0a, 0x0e, 0x4b, 0x65, 0x79, 0x44, 0x69, 0x67, 0x65,
	0x73, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x24, 0x0a, 0x0e, 0x65, 0x6e, 0x64, 0x5f,
	0x69, 0x6e, 0x63, 0x6c, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0c, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x63, 0x6c, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x89,
	0x02, 0x0a, 0x0e, 0x54, 0x72, 0x65, 0x65, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x39, 0x0a, 0x05, 0x70, 0x68, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x23, 0x2e, 0x6f, 0x66, 0x66, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x72, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x69, 0x6e, 0x67, 0x33, 0x5f, 0x31, 0x2e, 0x54, 0x72, 0x65, 0x65, 0x53, 0x79, 0x6e, 0x63,
	0x50, 0x68, 0x61, 0x73, 0x65, 0x52, 0x05, 0x70, 0x68, 0x61, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x0d,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x73, 0x65, 0x71, 0x5f, 0x6e, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0b, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x53, 0x65, 0x71, 0x4e, 0x72,
	0x12, 0x37, 0x0a, 0x18, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x15, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x6f, 0x6f, 0x74, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x12, 0x5f, 0x0a, 0x19, 0x70, 0x65, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x5f,
	0x72, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6f,
	0x66, 0x66, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67,
	0x33, 0x5f, 0x31, 0x2e, 0x4b, 0x65, 0x79, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x52, 0x61, 0x6e,
	0x67, 0x65, 0x52, 0x16, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x4b, 0x65, 0x79, 0x44, 0x69,
	0x67, 0x65, 0x73, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x22, 0x64, 0x0a, 0x0e, 0x50, 0x61,
	0x63, 0x65, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x65, 0x70, 0x6f,
	0x63, 0x68, 0x12, 0x3c, 0x0a, 0x1b, 0x68, 0x69, 0x67, 0x68, 0x65, 0x73, 0x74, 0x5f, 0x73, 0x65,
	0x6e, 0x74, 0x5f, 0x6e, 0x65, 0x77, 0x5f, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x5f, 0x77, 0x69, 0x73,
	0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x17, 0x68, 0x69, 0x67, 0x68, 0x65, 0x73, 0x74,
	0x53, 0x65, 0x6e, 0x74, 0x4e, 0x65, 0x77, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x57, 0x69, 0x73, 0x68,
	0x22, 0xb9, 0x01, 0x0a, 0x08, 0x42, 0x6c, 0x6f, 0x62, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x25, 0x0a,
	0x0e, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x4c, 0x65,
	0x6e, 0x67, 0x74, 0x68, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x68, 0x61,
	0x76, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x08, 0x52, 0x0a, 0x63, 0x68, 0x75, 0x6e, 0x6b,
	0x48, 0x61, 0x76, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x64,
	0x69, 0x67, 0x65, 0x73, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0c, 0x63, 0x68,
	0x75, 0x6e, 0x6b, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x73, 0x12, 0x22, 0x0a, 0x0d, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x79, 0x5f, 0x73, 0x65, 0x71, 0x5f, 0x6e, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x53, 0x65, 0x71, 0x4e, 0x72, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x72, 0x22, 0x62, 0x0a, 0x0e,
	0x42, 0x6c, 0x6f, 0x62, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3a, 0x0a, 0x19, 0x63, 0x75, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x69,
	0x76, 0x65, 0x5f, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74,
	0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x17, 0x63, 0x75, 0x6d, 0x75, 0x6c, 0x61, 0x74,
	0x69, 0x76, 0x65, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68,
	0x2a, 0x66, 0x0a, 0x0d, 0x54, 0x72, 0x65, 0x65, 0x53, 0x79, 0x6e, 0x63, 0x50, 0x68, 0x61, 0x73,
	0x65, 0x12, 0x1c, 0x0a, 0x18, 0x54, 0x52, 0x45, 0x45, 0x5f, 0x53, 0x59, 0x4e, 0x43, 0x5f, 0x50,
	0x48, 0x41, 0x53, 0x45, 0x5f, 0x49, 0x4e, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x00, 0x12,
	0x1b, 0x0a, 0x17, 0x54, 0x52, 0x45, 0x45, 0x5f, 0x53, 0x59, 0x4e, 0x43, 0x5f, 0x50, 0x48, 0x41,
	0x53, 0x45, 0x5f, 0x57, 0x41, 0x49, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x1a, 0x0a, 0x16,
	0x54, 0x52, 0x45, 0x45, 0x5f, 0x53, 0x59, 0x4e, 0x43, 0x5f, 0x50, 0x48, 0x41, 0x53, 0x45, 0x5f,
	0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x02, 0x42, 0x11, 0x5a, 0x0f, 0x2e, 0x3b, 0x73, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_offchainreporting3_1_db_proto_rawDescOnce sync.Once
	file_offchainreporting3_1_db_proto_rawDescData = file_offchainreporting3_1_db_proto_rawDesc
)

func file_offchainreporting3_1_db_proto_rawDescGZIP() []byte {
	file_offchainreporting3_1_db_proto_rawDescOnce.Do(func() {
		file_offchainreporting3_1_db_proto_rawDescData = protoimpl.X.CompressGZIP(file_offchainreporting3_1_db_proto_rawDescData)
	})
	return file_offchainreporting3_1_db_proto_rawDescData
}

var file_offchainreporting3_1_db_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_offchainreporting3_1_db_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_offchainreporting3_1_db_proto_goTypes = []interface{}{
	(TreeSyncPhase)(0),     // 0: offchainreporting3_1.TreeSyncPhase
	(*KeyDigestRange)(nil), // 1: offchainreporting3_1.KeyDigestRange
	(*TreeSyncStatus)(nil), // 2: offchainreporting3_1.TreeSyncStatus
	(*PacemakerState)(nil), // 3: offchainreporting3_1.PacemakerState
	(*BlobMeta)(nil),       // 4: offchainreporting3_1.BlobMeta
	(*BlobQuotaStats)(nil), // 5: offchainreporting3_1.BlobQuotaStats
}
var file_offchainreporting3_1_db_proto_depIdxs = []int32{
	0, // 0: offchainreporting3_1.TreeSyncStatus.phase:type_name -> offchainreporting3_1.TreeSyncPhase
	1, // 1: offchainreporting3_1.TreeSyncStatus.pending_key_digest_ranges:type_name -> offchainreporting3_1.KeyDigestRange
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_offchainreporting3_1_db_proto_init() }
func file_offchainreporting3_1_db_proto_init() {
	if File_offchainreporting3_1_db_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_offchainreporting3_1_db_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyDigestRange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_offchainreporting3_1_db_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TreeSyncStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_offchainreporting3_1_db_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PacemakerState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_offchainreporting3_1_db_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlobMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_offchainreporting3_1_db_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlobQuotaStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_offchainreporting3_1_db_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_offchainreporting3_1_db_proto_goTypes,
		DependencyIndexes: file_offchainreporting3_1_db_proto_depIdxs,
		EnumInfos:         file_offchainreporting3_1_db_proto_enumTypes,
		MessageInfos:      file_offchainreporting3_1_db_proto_msgTypes,
	}.Build()
	File_offchainreporting3_1_db_proto = out.File
	file_offchainreporting3_1_db_proto_rawDesc = nil
	file_offchainreporting3_1_db_proto_goTypes = nil
	file_offchainreporting3_1_db_proto_depIdxs = nil
}
